// Code generated by mockery v2.51.0. DO NOT EDIT.

package mocks

import (
	context "context"

	types "github.com/babylonlabs-io/staking-api-service/internal/shared/types"
	mock "github.com/stretchr/testify/mock"
)

// CoinMarketCapClientInterface is an autogenerated mock type for the CoinMarketCapClientInterface type
type CoinMarketCapClientInterface struct {
	mock.Mock
}

// GetLatestBtcPrice provides a mock function with given fields: ctx
func (_m *CoinMarketCapClientInterface) GetLatestBtcPrice(ctx context.Context) (float64, *types.Error) {
	ret := _m.Called(ctx)

	if len(ret) == 0 {
		panic("no return value specified for GetLatestPrice")
	}

	var r0 float64
	var r1 *types.Error
	if rf, ok := ret.Get(0).(func(context.Context) (float64, *types.Error)); ok {
		return rf(ctx)
	}
	if rf, ok := ret.Get(0).(func(context.Context) float64); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Get(0).(float64)
	}

	if rf, ok := ret.Get(1).(func(context.Context) *types.Error); ok {
		r1 = rf(ctx)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*types.Error)
		}
	}

	return r0, r1
}

// NewCoinMarketCapClientInterface creates a new instance of CoinMarketCapClientInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewCoinMarketCapClientInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *CoinMarketCapClientInterface {
	mock := &CoinMarketCapClientInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
